// <auto-generated />
using System;
using Escola.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Escola.Data.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Escola.Domain.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int>("TurmaID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TurmaID");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("Escola.Domain.Aula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Disciplina")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<int>("ProfessorID")
                        .HasColumnType("int");

                    b.Property<int>("TurmaID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorID");

                    b.HasIndex("TurmaID");

                    b.ToTable("Aula");
                });

            modelBuilder.Entity("Escola.Domain.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agencia")
                        .HasColumnType("varchar(10)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Banco")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Conta")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("TurmaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TurmaId");

                    b.ToTable("Professor");
                });

            modelBuilder.Entity("Escola.Domain.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnoEscolar")
                        .HasColumnType("int");

                    b.Property<string>("Sala")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Turma");
                });

            modelBuilder.Entity("Escola.Domain.Aluno", b =>
                {
                    b.HasOne("Escola.Domain.Turma", "Turma")
                        .WithMany("Alunos")
                        .HasForeignKey("TurmaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("Escola.Domain.Aula", b =>
                {
                    b.HasOne("Escola.Domain.Professor", "Professor")
                        .WithMany("Aulas")
                        .HasForeignKey("ProfessorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Escola.Domain.Turma", "Turma")
                        .WithMany("Aulas")
                        .HasForeignKey("TurmaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("Escola.Domain.Professor", b =>
                {
                    b.HasOne("Escola.Domain.Turma", null)
                        .WithMany("Professores")
                        .HasForeignKey("TurmaId");
                });

            modelBuilder.Entity("Escola.Domain.Professor", b =>
                {
                    b.Navigation("Aulas");
                });

            modelBuilder.Entity("Escola.Domain.Turma", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("Aulas");

                    b.Navigation("Professores");
                });
#pragma warning restore 612, 618
        }
    }
}
