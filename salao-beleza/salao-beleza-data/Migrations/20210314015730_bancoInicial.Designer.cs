// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using salao_beleza_data;

namespace salao_beleza_data.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20210314015730_bancoInicial")]
    partial class bancoInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("salao_beleza_dominio.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Anotacao")
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAgendamento")
                        .HasColumnType("datetime");

                    b.Property<int?>("ServicoSolicitadoFuncionarioId")
                        .HasColumnType("int");

                    b.Property<int?>("ServicoSolicitadoServicoId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ServicoSolicitadoFuncionarioId", "ServicoSolicitadoServicoId");

                    b.ToTable("Agendamento");
                });

            modelBuilder.Entity("salao_beleza_dominio.BalancoMensal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<double>("ComissaoMensal")
                        .HasColumnType("float");

                    b.Property<double>("LucroMensal")
                        .HasColumnType("float");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<double>("TotalMensal")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("BalancoMensal");
                });

            modelBuilder.Entity("salao_beleza_dominio.Caixa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BalancoMensalId")
                        .HasColumnType("int");

                    b.Property<string>("ComissaoDiaria")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<string>("LucroDiario")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<double>("TotalDiario")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BalancoMensalId");

                    b.ToTable("Caixa");
                });

            modelBuilder.Entity("salao_beleza_dominio.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("salao_beleza_dominio.Comissao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BalancoMensalId")
                        .HasColumnType("int");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BalancoMensalId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Comissao");
                });

            modelBuilder.Entity("salao_beleza_dominio.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cargo")
                        .HasColumnType("int");

                    b.Property<double>("ComissaoAReceber")
                        .HasColumnType("float");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("HorarioEntrada")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("HorarioSaida")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("salao_beleza_dominio.FuncionarioServico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int>("ServicoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("ServicoId");

                    b.ToTable("FuncionarioServico");
                });

            modelBuilder.Entity("salao_beleza_dominio.Gasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BalancoMensalId")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BalancoMensalId");

                    b.ToTable("Gasto");
                });

            modelBuilder.Entity("salao_beleza_dominio.Pagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CaixaId")
                        .HasColumnType("int");

                    b.Property<double>("Comissao")
                        .HasColumnType("float");

                    b.Property<double>("ValorServico")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CaixaId");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("salao_beleza_dominio.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MinutosParaExecucao")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Servico");
                });

            modelBuilder.Entity("salao_beleza_dominio.ServicoSolicitado", b =>
                {
                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int>("ServicoId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("FuncionarioId", "ServicoId");

                    b.HasIndex("ServicoId");

                    b.ToTable("ServicoSolicitado");
                });

            modelBuilder.Entity("salao_beleza_dominio.Agendamento", b =>
                {
                    b.HasOne("salao_beleza_dominio.Cliente", "Cliente")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ClienteId");

                    b.HasOne("salao_beleza_dominio.Pagamento", "Pagamento")
                        .WithOne("AgendamentoRealizado")
                        .HasForeignKey("salao_beleza_dominio.Agendamento", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("salao_beleza_dominio.ServicoSolicitado", "ServicoSolicitado")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ServicoSolicitadoFuncionarioId", "ServicoSolicitadoServicoId");
                });

            modelBuilder.Entity("salao_beleza_dominio.Caixa", b =>
                {
                    b.HasOne("salao_beleza_dominio.BalancoMensal", "BalancoMensal")
                        .WithMany("Caixas")
                        .HasForeignKey("BalancoMensalId");
                });

            modelBuilder.Entity("salao_beleza_dominio.Comissao", b =>
                {
                    b.HasOne("salao_beleza_dominio.BalancoMensal", "BalancoMensal")
                        .WithMany("ComissoesPagas")
                        .HasForeignKey("BalancoMensalId");

                    b.HasOne("salao_beleza_dominio.Funcionario", "Funcionario")
                        .WithMany("ComissoesRecebidas")
                        .HasForeignKey("FuncionarioId");
                });

            modelBuilder.Entity("salao_beleza_dominio.FuncionarioServico", b =>
                {
                    b.HasOne("salao_beleza_dominio.Funcionario", "Funcionario")
                        .WithMany("FuncionarioServico")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("salao_beleza_dominio.Servico", "Servico")
                        .WithMany("FuncionarioServico")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("salao_beleza_dominio.Gasto", b =>
                {
                    b.HasOne("salao_beleza_dominio.BalancoMensal", "BalancoMensal")
                        .WithMany("Gastos")
                        .HasForeignKey("BalancoMensalId");
                });

            modelBuilder.Entity("salao_beleza_dominio.Pagamento", b =>
                {
                    b.HasOne("salao_beleza_dominio.Caixa", "Caixa")
                        .WithMany("Pagamentos")
                        .HasForeignKey("CaixaId");
                });

            modelBuilder.Entity("salao_beleza_dominio.ServicoSolicitado", b =>
                {
                    b.HasOne("salao_beleza_dominio.Funcionario", "Funcionario")
                        .WithMany("ServicosSolicitados")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("salao_beleza_dominio.Servico", "Servico")
                        .WithMany("ServicosSolicitados")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
